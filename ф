const posts = [];

const TITLE_VALIDATION_LIMIT = 100;
const TEXT_VALIDATION_LIMIT = 200;

const postTitleInputNode = document.querySelector('.js-post-title-input');
const postTextInputNode = document.querySelector('.js-post-text-input');
const newPostBtnNode = document.querySelector('.js-new-post-btn');
const postsNode = document.querySelector('.js-posts');
const validationMessage = document.getElementById('validationMessage');

newPostBtnNode.addEventListener('click', function() {
  const postFromUser = getPostFromUser();
  addPost(postFromUser);
  renderPosts();
});

postTitleInputNode.addEventListener('input', validation);
postTextInputNode.addEventListener('input', validation);

function validation() {
  const titleLen = postTitleInputNode.value.length;
  const textLen = postTextInputNode.value.length;

  if (titleLen > TITLE_VALIDATION_LIMIT) {
    validationMessage.innerText = `Длина заголовка не должна превышать ${TITLE_VALIDATION_LIMIT} символов`;
    validationMessage.classList.remove("validationMessage_hidden");
    newPostBtnNode.disabled = true;
    return;
  }

  if (textLen > TEXT_VALIDATION_LIMIT) {
    validationMessage.innerText = `Длина текста не должна превышать ${TEXT_VALIDATION_LIMIT} символов`;
    validationMessage.classList.remove("validationMessage_hidden");
    newPostBtnNode.disabled = true;
    return;
  }

  validationMessage.classList.add("validationMessage_hidden");
  newPostBtnNode.disabled = false;
}

function getPostFromUser() {
  const title = postTitleInputNode.value;
  const text = postTextInputNode.value;
  return {
    title: title,
    text: text
  };
}

function addPost({ title, text }) {
  const currentDate = new Date();
  const minutes = currentDate.getMinutes() < 10 ? `0${currentDate.getMinutes()}` : `${currentDate.getMinutes()}`;
  const dt = `${currentDate.getHours()}:${minutes} ${currentDate.getDate()}.${(currentDate.getMonth() + 1).toString().padStart(2, '0')}.${currentDate.getFullYear()}`;
  posts.push({ dt, title, text });
}

function renderPosts() {
  postsNode.innerHTML = '';

  posts.forEach((post, index) => {
    const postElement = document.createElement('div');
    postElement.classList.add('post');
    postElement.innerHTML = `
      <div class="post__date">${post.dt}</div>
      <h3 class="post__title">${post.title}</h3>
      <div class="post__text" onclick="editPost(${index})">
        <input type="text" class="post__text-input" value="${post.text}">
        <button class="post__save-btn" onclick="savePost(${index})"></button>
      </div>
      <button class="post__delete-btn" onclick="deletePost(${index})"></button>
    `;
    postsNode.appendChild(postElement);
  });
}

function editPost(index) {
  const postTextElement = document.querySelector(`.js-posts .post:nth-child(${index+1}) .post__text`);
  const postTextInputElement = document.createElement('textarea');
  postTextInputElement.classList.add('post__text-input');
  postTextInputElement.value = posts[index].text;
  postTextElement.innerHTML = '';
  postTextElement.appendChild(postTextInputElement);
  postTextInputElement.focus();
}

function savePost(index) {
  const postTextInputElement = document.querySelector(`.js-posts .post:nth-child(${index+1}) .post__text .post__text-input`);
  posts[index].text = postTextInputElement.value;
  renderPosts();
}

function deletePost(index) {
  posts.splice(index, 1);
  renderPosts();
}

renderPosts();